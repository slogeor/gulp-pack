/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(2);
	GLOBAL.ns('util');
	__webpack_require__(3);
	console.log(GLOBAL);


/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';
	
	(function () {
	    var toString = Object.prototype.toString;
	
	    var isObject = function (factory) {
	        return toString.call(factory) === '[object Object]';
	    };
	
	    var isFunction = function (factory) {
	        return toString.call(factory) === '[object Function]';
	    };
	
	    /**
	     * @descript 命名空间管理
	     * @namespace GLOBAL
	     */
	    if (!isObject(window.GLOBAL)) {
	        window.GLOBAL = {};
	    }
	
	    /**
	     * 定义命名空间
	     * @param namespaceStr {String} 命名空间字符串
	     * @return {GLOBAL} 返回全局对象GLOBAL
	     */
	    window.GLOBAL.ns = function (namespaceStr) {
	        var namespaceList = namespaceStr && namespaceStr.split('.') || [];
	        var self = window.GLOBAL;
	
	        for (var i = 0, len = namespaceList.length; i < len; i++) {
	            self = self[namespaceList[i]] = self[namespaceList[i]] || {};
	        }
	        return self;
	    };
	
	    /**
	     * 定义模块,默认挂在GLOBAL下
	     * @param name {String} 名称
	     * @param factory {Object|Function} 扩展对象或构造方法
	     */
	    window.GLOBAL.define = function (name, factory) {
	        if (arguments.length < 2) {
	            return;
	        }
	
	        /**
	         * 命名空间存在且有属性
	         */
	        if (window.GLOBAL[name] && isObject(window.GLOBAL[name]) || isFunction(window.GLOBAL[name])) {
	            throw new Error('该命名空间已存在,不允许覆盖');
	        }
	
	        /**
	         * 向命名空间下挂
	         */
	        if (isFunction(factory)) {
	            window.GLOBAL[name] = factory;
	        }
	    };
	}());


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(4);
	__webpack_require__(5);


/***/ },
/* 4 */
/***/ function(module, exports) {

	var date = {
	    getTime: function () {
	        return (new Date()).getTime();
	    }
	};
	
	window.GLOBAL.util.date = date;


/***/ },
/* 5 */
/***/ function(module, exports) {

	var param = {
	    getHash: function () {
	        return window.location.hash;
	    }
	};
	
	window.GLOBAL.util.param = param;


/***/ }
/******/ ]);
//# sourceMappingURL=index.min.js.map